user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {{
    worker_connections  1024;
}}

http {{
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    types_hash_max_size 2048;

    include /etc/nginx/conf.d/*.conf;

    # Redirect HTTP to HTTPS
    server {{
        listen 80;
        server_name {ip_address};

        return 301 https://$host$request_uri;
    }}

    # HTTPS server block
    server {{
        listen 443 ssl;
        server_name {ip_address};

        ssl_certificate /etc/nginx/certs/cert.pem;
        ssl_certificate_key /etc/nginx/certs/key.pem;

        location / {{
            proxy_pass http://web-service:5000;  # Forward requests to the Flask app in the web-service container
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Disable buffering for Server-Sent Events (SSE)
            proxy_buffering off;
            proxy_cache off;
            chunked_transfer_encoding off;
            proxy_set_header Connection '';  # Keep the connection open

            # Set timeouts for this location
            proxy_connect_timeout 900s;
            proxy_send_timeout 900s;
            proxy_read_timeout 900s;
            keepalive_timeout 900s;
        }}
    }}
}}
